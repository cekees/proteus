#ifndef SUBGRIDERROR_H
#define SUBGRIDERROR_H
#include <math.h>
#include <stdio.h> /*mwf for debugging*/
#include <assert.h>
/**
 \file subgridError.h
 \brief C implementations of subgrid error calculations
*/

/**
 \defgroup subgridError subgridError
 \brief c implementation of multiscale fem subgrid error approximations
 @{
*/

extern void calculateSubgridError_tauRes(
  int nElements_global,
  int nQuadraturePoints_element,
  int nDOF_trial_element,
  double *tau,
  double *pdeResidual,
  double *dpdeResidual,
  double *subgridError,
  double *dsubgridError
);
extern void calculateSubgridError_ADR_generic_tau(int nElements_global,
                                           int nQuadraturePoints_element,
                                           int nSpace,
                                           double* inverseJ,
                                           double* dmt,
                                           double* df,
                                           double* a,
                                           double* da,
                                           double* grad_phi,
                                           double* dphi,
                                           double* dr,
                                           double* pe,
                                           double* cfl,
                                           double* tau);
void calculateSubgridError_ADR_generic_tau_sd(int nElements_global,
					      int nQuadraturePoints_element,
					      int nSpace,
					      int* rowptr,
					      int* colind,
					      double* inverseJ,
					      double* dmt,
					      double* df,
					      double* a,
					      double* da,
					      double* grad_phi,
					      double* dphi,
					      double* dr,
					      double* pe,
					      double* cfl,
					      double* tau);
extern void calculateSubgridErrorNavierStokes2D_generic_tau(int nElements_global,
                                                     int nQuadraturePoints_element,
                                                     int nSpace,
                                                     double* inverseJ,
                                                     double* dmt,
                                                     double* dm,
                                                     double* f,
                                                     double* a,
                                                     double* tau0,
                                                     double* tau1,
                                                     double* cfl);
void calculateSubgridErrorNavierStokes2D_generic_tau_sd(int nElements_global,
                                                     int nQuadraturePoints_element,
                                                     int nSpace,
                                                     double* inverseJ,
                                                     double* dmt,
                                                     double* dm,
                                                     double* f,
                                                     double* a,
                                                     double* tau0,
                                                     double* tau1,
							double* cfl);
void calculateSubgridErrorStokes2D_GLS_velocity_sd(int nElements_global,
						   int nQuadraturePoints_element,
						   int nDOF_trial_element,
						   int nSpace,
						   double* elementDiameter,
						   double* a,
						   double* pdeResidualU,
						   double* dpdeResidualU_dp,
						   double* dpdeResidualU_du,
						   double* pdeResidualV,
						   double* dpdeResidualV_dp,
						   double* dpdeResidualV_dv,
						   double* subgridErrorU,
						   double* dsubgridErrorU_dp,
						   double* dsubgridErrorU_du,
						   double* subgridErrorV,
						   double* dsubgridErrorV_dp,
						   double* dsubgridErrorV_dv);
extern void calculateSubgridError_ADR_tau_p(
  int nElements_global,
  int nQuadraturePoints_element,
  int nSpace,
  double *elementDiameter,
  double *dmt,
  double *df,
  double *a,
  double *da,
  double *grad_phi,
  double *dphi,
  double *dr,
  double *pe,
  double *cfl,
  double *tau
);
extern void calculateSubgridError_ADR_tau_1(
  int nElements_global,
  int nQuadraturePoints_element,
  int nSpace,
  double *elementDiameter,
  double *dmt,
  double *df,
  double *a,
  double *da,
  double *grad_phi,
  double *dphi,
  double *dr,
  double *pe,
  double *cfl,
  double *tau
);
extern void calculateSubgridError_ADR_tau_2(
  int nElements_global,
  int nQuadraturePoints_element,
  int nSpace,
  double *elementDiameter,
  double *dmt,
  double *df,
  double *a,
  double *da,
  double *grad_phi,
  double *dphi,
  double *dr,
  double *pe,
  double *cfl,
  double *tau
);
extern void calculateSubgridError_ADR_tau(
  int nElements_global,
  int nQuadraturePoints_element,
  int nSpace,
  char stabilization,
  double *elementDiameter,
  double *dmt,
  double *df,
  double *a,
  double *da,
  double *grad_phi,
  double *dphi,
  double *dr,
  double *pe,
  double *cfl,
  double *tau
);
extern void calculateSubgridError_A_tau_1(
  int nElements_global,
  int nQuadraturePoints_element,
  int nSpace,
  double *elementDiameter,
  double *dmt,
  double *df,
  double *cfl,
  double *tau
);
extern void calculateSubgridError_A_tau_2(
  int nElements_global,
  int nQuadraturePoints_element,
  int nSpace,
  double *elementDiameter,
  double *dmt,
  double *df,
  double *cfl,
  double *tau
);
extern void calculateSubgridError_A_tau(
  int nElements_global,
  int nQuadraturePoints_element,
  int nSpace,
  char stabilization,
  double *elementDiameter,
  double *dmt,
  double *df,
  double *cfl,
  double *tau
);
extern void calculateSubgridErrorStokes2D_GLS_velocity(
  int nElements_global,
  int nQuadraturePoints_element,
  int nDOF_trial_element,
  int nSpace,
  double *elementDiameter,
  double *a,
  double *pdeResidualU,
  double *dpdeResidualU_dp,
  double *dpdeResidualU_du,
  double *pdeResidualV,
  double *dpdeResidualV_dp,
  double *dpdeResidualV_dv,
  double *subgridErrorU,
  double *dsubgridErrorU_dp,
  double *dsubgridErrorU_du,
  double *subgridErrorV,
  double *dsubgridErrorV_dp,
  double *dsubgridErrorV_dv
);
extern void calculateSubgridErrorStokes3D_GLS_velocity(
  int nElements_global,
  int nQuadraturePoints_element,
  int nDOF_trial_element,
  int nSpace,
  double *elementDiameter,
  double *a,
  double *pdeResidualU,
  double *dpdeResidualU_dp,
  double *dpdeResidualU_du,
  double *pdeResidualV,
  double *dpdeResidualV_dp,
  double *dpdeResidualV_dv,
  double *pdeResidualW,
  double *dpdeResidualW_dp,
  double *dpdeResidualW_dw,
  double *subgridErrorU,
  double *dsubgridErrorU_dp,
  double *dsubgridErrorU_du,
  double *subgridErrorV,
  double *dsubgridErrorV_dp,
  double *dsubgridErrorV_dv,
  double *subgridErrorW,
  double *dsubgridErrorW_dp,
  double *dsubgridErrorW_dw
);
void calculateSubgridErrorStokes3D_GLS_velocity_sd(int nElements_global,
						   int nQuadraturePoints_element,
						   int nDOF_trial_element,
						   int nSpace,
						   double* elementDiameter,
						   double* a,
						   double* pdeResidualU,
						   double* dpdeResidualU_dp,
						   double* dpdeResidualU_du,
						   double* pdeResidualV,
						   double* dpdeResidualV_dp,
						   double* dpdeResidualV_dv,
						   double* pdeResidualW,
						   double* dpdeResidualW_dp,
						   double* dpdeResidualW_dw,
						   double* subgridErrorU,
						   double* dsubgridErrorU_dp,
						   double* dsubgridErrorU_du,
						   double* subgridErrorV,
						   double* dsubgridErrorV_dp,
						   double* dsubgridErrorV_dv,
						   double* subgridErrorW,
						   double* dsubgridErrorW_dp,
						   double* dsubgridErrorW_dw);
extern void calculateSubgridErrorStokes2D_GLS_velocity_pressure(
  int nElements_global,
  int nQuadraturePoints_element,
  int nDOF_trial_element,
  int nSpace,
  double *elementDiameter,
  double *a,
  double *pdeResidualP,
  double *dpdeResidualP_du,
  double *dpdeResidualP_dv,
  double *pdeResidualU,
  double *dpdeResidualU_dp,
  double *dpdeResidualU_du,
  double *pdeResidualV,
  double *dpdeResidualV_dp,
  double *dpdeResidualV_dv,
  double *subgridErrorP,
  double *dsubgridErrorP_du,
  double *dsubgridErrorP_dv,
  double *subgridErrorU,
  double *dsubgridErrorU_dp,
  double *dsubgridErrorU_du,
  double *subgridErrorV,
  double *dsubgridErrorV_dp,
  double *dsubgridErrorV_dv
);
void calculateSubgridErrorStokes2D_GLS_velocity_pressure_sd(int nElements_global,
                                                         int nQuadraturePoints_element,
                                                         int nDOF_trial_element,
                                                         int nSpace,
                                                         double* elementDiameter,
                                                         double* a,
                                                         double* pdeResidualP,
                                                         double* dpdeResidualP_du,
                                                         double* dpdeResidualP_dv,
                                                         double* pdeResidualU,
                                                         double* dpdeResidualU_dp,
                                                         double* dpdeResidualU_du,
                                                         double* pdeResidualV,
                                                         double* dpdeResidualV_dp,
                                                         double* dpdeResidualV_dv,
                                                         double* subgridErrorP,
                                                         double* dsubgridErrorP_du,
                                                         double* dsubgridErrorP_dv,
                                                         double* subgridErrorU,
                                                         double* dsubgridErrorU_dp,
                                                         double* dsubgridErrorU_du,
                                                         double* subgridErrorV,
                                                         double* dsubgridErrorV_dp,
							    double* dsubgridErrorV_dv);
extern void calculateSubgridErrorStokes3D_GLS_velocity_pressure(
  int nElements_global,
  int nQuadraturePoints_element,
  int nDOF_trial_element,
  int nSpace,
  double *elementDiameter,
  double *a,
  double *pdeResidualP,
  double *dpdeResidualP_du,
  double *dpdeResidualP_dv,
  double *dpdeResidualP_dw,
  double *pdeResidualU,
  double *dpdeResidualU_dp,
  double *dpdeResidualU_du,
  double *pdeResidualV,
  double *dpdeResidualV_dp,
  double *dpdeResidualV_dv,
  double *pdeResidualW,
  double *dpdeResidualW_dp,
  double *dpdeResidualW_dw,
  double *subgridErrorP,
  double *dsubgridErrorP_du,
  double *dsubgridErrorP_dv,
  double *dsubgridErrorP_dw,
  double *subgridErrorU,
  double *dsubgridErrorU_dp,
  double *dsubgridErrorU_du,
  double *subgridErrorV,
  double *dsubgridErrorV_dp,
  double *dsubgridErrorV_dv,
  double *subgridErrorW,
  double *dsubgridErrorW_dp,
  double *dsubgridErrorW_dw
);
void calculateSubgridErrorStokes3D_GLS_velocity_pressure_sd(int nElements_global,
                                                         int nQuadraturePoints_element,
                                                         int nDOF_trial_element,
                                                         int nSpace,
                                                         double* elementDiameter,
                                                         double* a,
                                                         double* pdeResidualP,
                                                         double* dpdeResidualP_du,
                                                         double* dpdeResidualP_dv,
                                                         double* dpdeResidualP_dw,
                                                         double* pdeResidualU,
                                                         double* dpdeResidualU_dp,
                                                         double* dpdeResidualU_du,
                                                         double* pdeResidualV,
                                                         double* dpdeResidualV_dp,
                                                         double* dpdeResidualV_dv,
                                                         double* pdeResidualW,
                                                         double* dpdeResidualW_dp,
                                                         double* dpdeResidualW_dw,
                                                         double* subgridErrorP,
                                                         double* dsubgridErrorP_du,
                                                         double* dsubgridErrorP_dv,
                                                         double* dsubgridErrorP_dw,
                                                         double* subgridErrorU,
                                                         double* dsubgridErrorU_dp,
                                                         double* dsubgridErrorU_du,
                                                         double* subgridErrorV,
                                                         double* dsubgridErrorV_dp,
                                                         double* dsubgridErrorV_dv,
                                                         double* subgridErrorW,
                                                         double* dsubgridErrorW_dp,
							    double* dsubgridErrorW_dw);
extern void calculateSubgridErrorNavierStokes2D_GLS_tau(
  int nElements_global,
  int nQuadraturePoints_element,
  int nSpace,
  double hFactor,
  double *elementDiameter,
  double *dmt,
  double *dm,
  double *f,
  double *a,
  double *tau0,
  double *tau1,
  double *cfl
);
void calculateSubgridErrorNavierStokes2D_GLS_tau_sd(int nElements_global,
                                                 int nQuadraturePoints_element,
                                                 int nSpace,
                                                 double  hFactor,
                                                 double* elementDiameter,
                                                 double* dmt,
                                                 double* dm,
                                                 double* f,
                                                 double* a,
                                                 double* tau0,
                                                 double* tau1,
						    double* cfl);
extern void calculateSubgridErrorStokes_GLS_tau(
  int nElements_global,
  int nQuadraturePoints_element,
  int nSpace,
  double *elementDiameter,
  double *dH,
  double *a,
  double *tau0,
  double *tau1
);
extern void calculateSubgridErrorStokes_GLS_tau_sd(
  int nElements_global,
  int nQuadraturePoints_element,
  int nSpace,
  double *elementDiameter,
  double *dH,
  double *a,
  double *tau0,
  double *tau1
);
extern void calculateSubgridErrorStokes2D_GLS_tauRes(
  int nElements_global,
  int nQuadraturePoints_element,
  int nDOF_trial_element,
  int nSpace,
  double *tau0,
  double *tau1,
  double *pdeResidualP,
  double *dpdeResidualP_du,
  double *dpdeResidualP_dv,
  double *pdeResidualU,
  double *dpdeResidualU_dp,
  double *dpdeResidualU_du,
  double *pdeResidualV,
  double *dpdeResidualV_dp,
  double *dpdeResidualV_dv,
  double *subgridErrorP,
  double *dsubgridErrorP_du,
  double *dsubgridErrorP_dv,
  double *subgridErrorU,
  double *dsubgridErrorU_dp,
  double *dsubgridErrorU_du,
  double *subgridErrorV,
  double *dsubgridErrorV_dp,
  double *dsubgridErrorV_dv
);

extern void calculateSubgridErrorStokes3D_GLS_tauRes(int nElements_global,
						     int nQuadraturePoints_element,
						     int nDOF_trial_element,
						     int nSpace,
						     double* tau0,
						     double* tau1,
						     double* pdeResidualP,
						     double* dpdeResidualP_du,
						     double* dpdeResidualP_dv,
						     double* dpdeResidualP_dw,
						     double* pdeResidualU,
						     double* dpdeResidualU_dp,
						     double* dpdeResidualU_du,
						     double* pdeResidualV,
						     double* dpdeResidualV_dp,
						     double* dpdeResidualV_dv,
						     double* pdeResidualW,
						     double* dpdeResidualW_dp,
						     double* dpdeResidualW_dw,
						     double* subgridErrorP,
						     double* dsubgridErrorP_du,
						     double* dsubgridErrorP_dv,
						     double* dsubgridErrorP_dw,
						     double* subgridErrorU,
						     double* dsubgridErrorU_dp,
						     double* dsubgridErrorU_du,
						     double* subgridErrorV,
						     double* dsubgridErrorV_dp,
						     double* dsubgridErrorV_dv,
						     double* subgridErrorW,
						     double* dsubgridErrorW_dp,
						     double* dsubgridErrorW_dw);


extern void calculateSubgridErrorNavierStokes3D_GLS_velocity_pressure(
  int nElements_global,
  int nQuadraturePoints_element,
  int nDOF_trial_element,
  int nSpace,
  double *elementDiameter,
  double *dm,
  double *f,
  double *a,
  double *pdeResidualP,
  double *dpdeResidualP_du,
  double *dpdeResidualP_dv,
  double *dpdeResidualP_dw,
  double *pdeResidualU,
  double *dpdeResidualU_dp,
  double *dpdeResidualU_du,
  double *pdeResidualV,
  double *dpdeResidualV_dp,
  double *dpdeResidualV_dv,
  double *pdeResidualW,
  double *dpdeResidualW_dp,
  double *dpdeResidualW_dw,
  double *subgridErrorP,
  double *dsubgridErrorP_du,
  double *dsubgridErrorP_dv,
  double *dsubgridErrorP_dw,
  double *subgridErrorU,
  double *dsubgridErrorU_dp,
  double *dsubgridErrorU_du,
  double *subgridErrorV,
  double *dsubgridErrorV_dp,
  double *dsubgridErrorV_dv,
  double *subgridErrorW,
  double *dsubgridErrorW_dp,
  double *dsubgridErrorW_dw
);
extern void calculateSubgridErrorStokes2D_1(
  int nElements_global,
  int nQuadraturePoints_element,
  int nDOF_trial_element,
  int nSpace,
  double *elementDiameter,
  double *u,
  double *v,
  double *a,
  double *pdeResidualP,
  double *dpdeResidualP_du,
  double *dpdeResidualP_dv,
  double *pdeResidualU,
  double *dpdeResidualU_dp,
  double *dpdeResidualU_du,
  double *pdeResidualV,
  double *dpdeResidualV_dp,
  double *dpdeResidualV_dv,
  double *subgridErrorP,
  double *dsubgridErrorP_dp,
  double *dsubgridErrorP_du,
  double *dsubgridErrorP_dv,
  double *subgridErrorU,
  double *dsubgridErrorU_dp,
  double *dsubgridErrorU_du,
  double *dsubgridErrorU_dv,
  double *subgridErrorV,
  double *dsubgridErrorV_dp,
  double *dsubgridErrorV_du,
  double *dsubgridErrorV_dv
);
extern void calculateSubgridError_Harari_tau_sd(int nElements_global,
					 int nQuadraturePoints_element,
					 int nSpace,
					 double dt,
					 int* rowptr,
					 int* colind,
					 double* elementDiameter,
					 double* a,
					 double* tau);
extern void calculateSubgridErrorShallowWater1D(int nElements_global,
                                         int nQuadraturePoints_element,
                                         double g,
                                         double* elementDiameter,
                                         double* h,
                                         double* hu,
                                         double* cfl_1,
                                         double* cfl_2);
extern void calculateSubgridErrorShallowWater2D(int nElements_global,
                                         int nQuadraturePoints_element,
                                         double g,
                                         double* elementDiameter,
                                         double* h,
                                         double* hu,
                                         double* hv,
                                         double* cfl_1,
                                         double* cfl_2,
                                         double* cfl_3);
extern void calculateSubgridErrorStokes2D_1(int nElements_global,
                                     int nQuadraturePoints_element,
                                     int nDOF_trial_element,
                                     int nSpace,
                                     double* elementDiameter,
                                     double* u,
                                     double* v,
                                     double* a,
                                     double* pdeResidualP,
                                     double* dpdeResidualP_du,
                                     double* dpdeResidualP_dv,
                                     double* pdeResidualU,
                                     double* dpdeResidualU_dp,
                                     double* dpdeResidualU_du,
                                     double* pdeResidualV,
                                     double* dpdeResidualV_dp,
                                     double* dpdeResidualV_dv,
                                     double* subgridErrorP,
                                     double* dsubgridErrorP_dp,
                                     double* dsubgridErrorP_du,
                                     double* dsubgridErrorP_dv,
                                     double* subgridErrorU,
                                     double* dsubgridErrorU_dp,
                                     double* dsubgridErrorU_du,
                                     double* dsubgridErrorU_dv,
                                     double* subgridErrorV,
                                     double* dsubgridErrorV_dp,
                                     double* dsubgridErrorV_du,
                                     double* dsubgridErrorV_dv);
extern void calculateSubgridErrorGradient_tauRes(int nElements_global,
					  int nQuadraturePoints_element,
					  int nSpace,
					  double* tau_gradient,
					  double* grad_pdeResidual,
					  double* grad_subgridError);
extern void calculateSubgridError_ADR_Sangalli_tau_sd(int nElements_global,
					       int nQuadraturePoints_element,
					       int nSpace,
					       int* rowptr,
					       int* colind,
					       double* inverseJ,
					       double* dmt,
					       double* df,
					       double* a,
					       double* da,
					       double* grad_phi,
					       double* dphi,
					       double* dr,
					       double* pe,
					       double* cfl,
					       double* tau,
					       double* tau_gradient);
extern void calculateSubgridError_ADR_tau_sd(int nElements_global,
				      int nQuadraturePoints_element,
				      int nSpace,
				      int* rowptr,
				      int* colind,
				      char stabilization,
				      double* elementDiameter,
				      double* dmt,
				      double* df,
				      double* a,
				      double* da,
				      double* grad_phi,
				      double* dphi,
				      double* dr,
				      double* pe,
				      double* cfl,
				      double* tau);
extern void calculateSubgridErrorNavierStokes2D_generic_withBodyForce_tau(int nElements_global,
								   int nQuadraturePoints_element,
								   int nSpace,
								   double* inverseJ,
								   double* dmt,
								   double* dm,
								   double* f,
								   double* a,
								   double* dr,
								   double* tau0,
								   double* tau1,
								   double* cfl);
extern void calculateSubgridErrorNavierStokes2D_generic_withBodyForce_tau_sd(int nElements_global,
								   int nQuadraturePoints_element,
								   int nSpace,
								   double* inverseJ,
								   double* dmt,
								   double* dm,
								   double* f,
								   double* a,
								   double* dr,
								   double* tau0,
								   double* tau1,
								      double* cfl);
extern void calculateSubgridErrorNavierStokes2D_GLS_tauRes(int nElements_global,
                                                    int nQuadraturePoints_element,
                                                    int nDOF_trial_element,
                                                    int nSpace,
                                                    double* tau0,
                                                    double* tau1,
                                                    double* pdeResidualP,
                                                    double* dpdeResidualP_du,
                                                    double* dpdeResidualP_dv,
                                                    double* pdeResidualU,
                                                    double* dpdeResidualU_dp,
                                                    double* dpdeResidualU_du,
                                                    double* dpdeResidualU_dv,
                                                    double* pdeResidualV,
                                                    double* dpdeResidualV_dp,
                                                    double* dpdeResidualV_du,
                                                    double* dpdeResidualV_dv,
                                                    double* subgridErrorP,
                                                    double* dsubgridErrorP_du,
                                                    double* dsubgridErrorP_dv,
                                                    double* subgridErrorU,
                                                    double* dsubgridErrorU_dp,
                                                    double* dsubgridErrorU_du,
                                                    double* dsubgridErrorU_dv,
                                                    double* subgridErrorV,
                                                    double* dsubgridErrorV_dp,
                                                    double* dsubgridErrorV_du,
                                                    double* dsubgridErrorV_dv);
extern void calculateSubgridErrorStokes3D_GLS_tauRes(int nElements_global,
					      int nQuadraturePoints_element,
					      int nDOF_trial_element,
					      int nSpace,
					      double* tau0,
					      double* tau1,
					      double* pdeResidualP,
					      double* dpdeResidualP_du,
					      double* dpdeResidualP_dv,
					      double* dpdeResidualP_dw,
					      double* pdeResidualU,
					      double* dpdeResidualU_dp,
					      double* dpdeResidualU_du,
					      double* pdeResidualV,
					      double* dpdeResidualV_dp,
					      double* dpdeResidualV_dv,
					      double* pdeResidualW,
					      double* dpdeResidualW_dp,
					      double* dpdeResidualW_dw,
					      double* subgridErrorP,
					      double* dsubgridErrorP_du,
					      double* dsubgridErrorP_dv,
					      double* dsubgridErrorP_dw,
					      double* subgridErrorU,
					      double* dsubgridErrorU_dp,
					      double* dsubgridErrorU_du,
					      double* subgridErrorV,
					      double* dsubgridErrorV_dp,
					      double* dsubgridErrorV_dv,
					      double* subgridErrorW,
					      double* dsubgridErrorW_dp,
					      double* dsubgridErrorW_dw);
extern void calculateSubgridErrorNavierStokes3D_GLS_velocity_pressure_sd(int nElements_global,
                                                               int nQuadraturePoints_element,
                                                               int nDOF_trial_element,
                                                               int nSpace,
                                                               double* elementDiameter,
                                                               double* dm,
                                                               double* f,
                                                               double* a,
                                                               double* pdeResidualP,
                                                               double* dpdeResidualP_du,
                                                               double* dpdeResidualP_dv,
                                                               double* dpdeResidualP_dw,
                                                               double* pdeResidualU,
                                                               double* dpdeResidualU_dp,
                                                               double* dpdeResidualU_du,
                                                               double* pdeResidualV,
                                                               double* dpdeResidualV_dp,
                                                               double* dpdeResidualV_dv,
                                                               double* pdeResidualW,
                                                               double* dpdeResidualW_dp,
                                                               double* dpdeResidualW_dw,
                                                               double* subgridErrorP,
                                                               double* dsubgridErrorP_du,
                                                               double* dsubgridErrorP_dv,
                                                               double* dsubgridErrorP_dw,
                                                               double* subgridErrorU,
                                                               double* dsubgridErrorU_dp,
                                                               double* dsubgridErrorU_du,
                                                               double* subgridErrorV,
                                                               double* dsubgridErrorV_dp,
                                                               double* dsubgridErrorV_dv,
                                                               double* subgridErrorW,
                                                               double* dsubgridErrorW_dp,
								  double* dsubgridErrorW_dw);
extern void calculateSubgridErrorStokes2D_1_sd(int nElements_global,
                                     int nQuadraturePoints_element,
                                     int nDOF_trial_element,
                                     int nSpace,
                                     double* elementDiameter,
                                     double* u,
                                     double* v,
                                     double* a,
                                     double* pdeResidualP,
                                     double* dpdeResidualP_du,
                                     double* dpdeResidualP_dv,
                                     double* pdeResidualU,
                                     double* dpdeResidualU_dp,
                                     double* dpdeResidualU_du,
                                     double* pdeResidualV,
                                     double* dpdeResidualV_dp,
                                     double* dpdeResidualV_dv,
                                     double* subgridErrorP,
                                     double* dsubgridErrorP_dp,
                                     double* dsubgridErrorP_du,
                                     double* dsubgridErrorP_dv,
                                     double* subgridErrorU,
                                     double* dsubgridErrorU_dp,
                                     double* dsubgridErrorU_du,
                                     double* dsubgridErrorU_dv,
                                     double* subgridErrorV,
                                     double* dsubgridErrorV_dp,
                                     double* dsubgridErrorV_du,
					double* dsubgridErrorV_dv);
extern void calculateSubgridErrorNavierStokes3D_GLS_tauRes(int nElements_global,
                                                    int nQuadraturePoints_element,
                                                    int nDOF_trial_element,
                                                    int nSpace,
                                                    double* tau0,
                                                    double* tau1,
                                                    double* pdeResidualP,
                                                    double* dpdeResidualP_du,
                                                    double* dpdeResidualP_dv,
                                                    double* dpdeResidualP_dw,
                                                    double* pdeResidualU,
                                                    double* dpdeResidualU_dp,
                                                    double* dpdeResidualU_du,
                                                    double* dpdeResidualU_dv,
                                                    double* dpdeResidualU_dw,
                                                    double* pdeResidualV,
                                                    double* dpdeResidualV_dp,
                                                    double* dpdeResidualV_du,
                                                    double* dpdeResidualV_dv,
                                                    double* dpdeResidualV_dw,
                                                    double* pdeResidualW,
                                                    double* dpdeResidualW_dp,
                                                    double* dpdeResidualW_du,
                                                    double* dpdeResidualW_dv,
                                                    double* dpdeResidualW_dw,
                                                    double* subgridErrorP,
                                                    double* dsubgridErrorP_du,
                                                    double* dsubgridErrorP_dv,
                                                    double* dsubgridErrorP_dw,
                                                    double* subgridErrorU,
                                                    double* dsubgridErrorU_dp,
                                                    double* dsubgridErrorU_du,
                                                    double* dsubgridErrorU_dv,
                                                    double* dsubgridErrorU_dw,
                                                    double* subgridErrorV,
                                                    double* dsubgridErrorV_dp,
                                                    double* dsubgridErrorV_du,
                                                    double* dsubgridErrorV_dv,
                                                    double* dsubgridErrorV_dw,
                                                    double* subgridErrorW,
                                                    double* dsubgridErrorW_dp,
                                                    double* dsubgridErrorW_du,
                                                    double* dsubgridErrorW_dv,
							   double* dsubgridErrorW_dw);
/** @} */
#endif
